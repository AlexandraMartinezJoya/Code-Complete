/* This routine outputs an error message based on an error code supplied by the calling routine. The way it outputs the message depends on the current processing state, which it retrieves on its own. It returns a value indicating success or failure.
*/

Status ReportErrorMessage(
   ErrorCode errorToReport
   ) {
   // set the default status to "fail"
   Status errorMessageStatus = Status_Failure;

  // look up the message based on the error code
  Message errorMessage = LookupErrorMessage(errorToReport);

  // if the error code is valid 
  if (errorMessage.ValidCode() ) {
    // determine the processing method 
    ProcessingMethod errorProcessingMethod = CurrentProcessingMethod();

  //if doing interactively processing, display the error message
  //interactively and declare success
    if( messageLog.Status() == CommandLineStatus_Ok) {
      messageLog.AddToMessageQueue(errorMessage.Text() );
      messageLog.FlushMessageQueue();
      errorMessageStatus = Status_Success;
    }
    else {
      // can't do anything because the routine is already error processing
    }
  else {
   // can't do anything because the routine is already error processing
  }
   
// if the error code isn't valid, notify the user that an internal error has been deteced
else {
  DisplayInteractiveMessage(
    "Internal Error: Invalid error code in ReportErrorMessage()" 
  );
}

//return status information
return errorMessageStatus;
} 
